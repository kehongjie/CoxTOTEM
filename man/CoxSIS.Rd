% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoxSIS.R
\name{CoxSIS}
\alias{CoxSIS}
\title{Sure Independence Screening (SIS) for Cox Models with multiple studies.}
\usage{
CoxSIS(data.list, alpha1 = 1e-04, alpha2 = 0.05)
}
\arguments{
\item{data.list:}{A list in which every element represents a study.
Within each element (study), \code{time} is the follow up time (n * 1),
\code{event} is the status indicator (n * 1) with 0=alive and 1=dead, and
\code{X} is the covariates matrix of dimensions n * p.}

\item{alpha1:}{Tuning parameter, as \eqn{\alpha_1} in the paper. The Normal
critical qunatile when screening within each study. The default is \code{1E-4}.}

\item{alpha2:}{Tuning parameter, as \eqn{\alpha_2} in the paper. The
Chi-square critical quantile when screening aggregation of studies. The
default is 0.05.}
}
\value{
A list in which \code{stats} is the vector of the screening
statistics for all the covariates (for ranking purpose), and \code{index}
is the vector of indices of potential nonzero coefficients.
}
\description{
This function implements the two-step aggregation screening method to Cox
models with multiple studies. It is the first stage (i.e. screening stage)
of Cox-TOTEM method.
}
\examples{
\dontrun{
set.seed(1234)
library(MASS)
library(survival)

n <- 50 ## sample size
p <- 200 ## number of covariates
rho <- 0.5
S <- 5 ## number of studies
ss <- 2 ## number of signal/true predictors
lambda0 <- 1 ## baseline hazard
rate <- 0.2 ## parameter for Exponential distribution
mu <- 1 ## signal size

## set up the coefficients
true.ind <- sample(1:p,size=ss) ## signal index
noise.ind <- (1:p)[-true.ind]
beta.mat <- matrix(0,nrow=p,ncol=S)
for(jj in 1:length(true.ind)){
  beta.mat[true.ind[jj],] <- mu
}

## simulate data for each study
data.list <- vector("list",S)
for(s in 1:S){
  beta <- beta.mat[,s]
  sigma <- toeplitz(rho^c(0,1:(p-1)))
  X <- mvrnorm(n, rep(0,p), sigma)
  U <- runif(n,0,1)
  C <- rexp(n,rate=rate)
  time <- -log(U) / (lambda0*exp(X\%*\%beta)) 
  Y <- pmin(time,C)
  D <- ifelse(time<C,1,0)
  data.list[[s]] <- list(time=Y,event=D,X=X)
}

## screening
res.CoxSIS <- CoxSIS(data.list=data.list, alpha1=1e-4, alpha2=0.05)
print(res.CoxSIS$index) ## selected index set after CoxSIS
print(true.ind) ## true index set 
}
}
